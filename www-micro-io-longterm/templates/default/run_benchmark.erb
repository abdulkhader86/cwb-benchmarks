#!<%= @ruby %>

require './benchmark_helper'
require './sysbench-io'
require 'rubygems'
require 'rufus/scheduler'


@counter = 0
@io = IOBench.new
@scheduler = Rufus::Scheduler.new

@io.prepare_benchmark "<%= @file_size %>"

@scheduler.every "<%= @run_every %>", :first => :now do
    execute(<%= @repetitions %>, "<%= @file_size %>", <%= @max_time %>)
end

@scheduler.in "<%= @run_for %>" do
    BenchmarkHelper.notify_postprocessing_completed
    @scheduler.stop
end

@scheduler.join

# helper methods
BEGIN {
    def execute(times, file_size, max_time)
        times.times do
            cpu_info = @io.find_cpu_info
            io_result = @io.run_benchmark(file_size, max_time)
            cpu_metric, bench_metric = <%= @metric %>
            BenchmarkHelper.submit_metric(cpu_metric, @counter, cpu_info)
            BenchmarkHelper.submit_metric(bench_metric, @counter, io_result)
            @counter = @counter + 1
        end
    end
}