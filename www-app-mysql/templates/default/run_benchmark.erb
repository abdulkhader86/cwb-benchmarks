#!<%= @ruby %>

require './benchmark_helper'
require './sysbench-mysql'
require 'securerandom'

mysql = MySQL.new

success = mysql.prepare_mysql_benchmark("<%= @username %>", "<%= @pw %>", "<%= @db %>", <%= @table_size %>)
if !success
    puts("Preparing mysql benchmark failed!")
    exit
end

execute(mysql, <%= @repetitions %>, "<%= @username %>", "<%= @pw %>", "<%= @db %>", <%= @table_size %>, <%= @max_time %>)

# notify completed
BenchmarkHelper.notify_postprocessing_completed

# helper methods
BEGIN {

    def execute(mysql, times, username, pw, db, table_size, max_time)
        batch_id = SecureRandom.uuid
        times.times do |t|
            mysql_result = mysql.run_mysql_benchmark(username, pw, db, table_size, max_time)
            cpu = mysql.find_cpu_info
            if !mysql_result
                puts("Failed to run MySQL benchmark!")
                exit
            end
			
			cpu_metric, mysql_metric = <%= @metric %>
			
            BenchmarkHelper.submit_metric(cpu_metric, t, cpu)
            BenchmarkHelper.submit_metric(mysql_metric, t, mysql_result)
        end
    end
}